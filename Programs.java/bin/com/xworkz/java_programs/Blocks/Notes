Blocks
A Block is Group of one or more Statements enclosed in braces

Blocks Types
Static Initialization Block(SIB's)
Instance Initialization Block(IIB's)


Static Initialization Block(SIB's)
The Block with static name is called as SIB.

Static{
        //initializes static members of class
}

« it loads during class load.
« we can have any no of static blocks in class.
« we have multiblock then they execute accordingly to their occurance.
« it will execute when we create an object.

public class SibDemo{
       public static void main(String[] args){
       system.out.println("Mobile name is:"+mobile.brand);
       }
}

public class Mobile{
static String brand;
static{
          brand = "one plus";
          system.out.println("I'm a static block of mobile");
         }
}

Instance Initialization Block(IIB's)
The block without name called as IIB.

« Used to initialize instance members of the class.
« A class can have multiple IIB's but they execute according to their address of occurance.

public class Pendrive{
"          public static void main(String[] args) {
  
         System.out.println(""i'm IIB of pendrive"");
         }"
          System.out.println("I'm IIB of pendrive")
         }
}


public class IibDemo{
        public static void main(String[] args){
        Pendrive pendrive = new Pendrive();
        }
}


public class IibAndSibDemo{
          public static void main(String[] args){
          System.out.println(Book.noOfpages)
         }
}


« Iib's execute when object is created
« after creation of class object then the value will be loaded.

« Sib members are one for a class
« Iib and Constructor are each for an object, it executes how many times we execute object.
« Object members can access the static but viceversa is not possible.


public class Book{
               String name;
               static int noOfpages;
               System.out.println("I'm IIB of book");
}
static{
        noOfpages=100;
        System.out.println("I'm Sib of book");
       }
}

Book{
          System.out.println("I'm Constructor of book");
         }
}

public class SibAndIibDemo{
          public static void main(String[] args){
          Book book = new Book();
          System.out.println(Book.noOfpages);
         }
}

// I'm Sib of Book
I'm Iib of Book
I'm Constructor of Book
/100.